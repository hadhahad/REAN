#geom_smooth(method = 'lm', formula = y ~ x, aes(colour="Linear"))  +
#geom_smooth(method = 'loess', formula = y ~ x, aes(colour="Loess")) +
#scale_colour_manual(name="Smoothers", values=c("blue", "red")) +
#geom_abline(intercept = coef(logmedv_lm)[1], slope = coef(logmedv_lm)[2], col='red') +
labs(color="Lines:") +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,1], colour = "Fit")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 4))
?predict
new_conf = predict(logmedv_lm, newdata = new_crime, interval = "confidence", level=0.5)
new_pred = predict(logmedv_lm, newdata = new_crime, interval = "prediction")
ggplot(data, aes(x=crim, y=log(medv))) +
geom_point(size=1, alpha=0.7) +
#geom_smooth(method = 'lm', formula = y ~ x, aes(colour="Linear"))  +
#geom_smooth(method = 'loess', formula = y ~ x, aes(colour="Loess")) +
#scale_colour_manual(name="Smoothers", values=c("blue", "red")) +
#geom_abline(intercept = coef(logmedv_lm)[1], slope = coef(logmedv_lm)[2], col='red') +
labs(color="Lines:") +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,1], colour = "Fit")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 4))
new_conf = predict(logmedv_lm, newdata = new_crime, interval = "confidence", level=10)
new_pred = predict(logmedv_lm, newdata = new_crime, interval = "prediction")
ggplot(data, aes(x=crim, y=log(medv))) +
geom_point(size=1, alpha=0.7) +
#geom_smooth(method = 'lm', formula = y ~ x, aes(colour="Linear"))  +
#geom_smooth(method = 'loess', formula = y ~ x, aes(colour="Loess")) +
#scale_colour_manual(name="Smoothers", values=c("blue", "red")) +
#geom_abline(intercept = coef(logmedv_lm)[1], slope = coef(logmedv_lm)[2], col='red') +
labs(color="Lines:") +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,1], colour = "Fit")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 4))
new_conf = predict(logmedv_lm, newdata = new_crime, interval = "confidence", level=0.1)
new_pred = predict(logmedv_lm, newdata = new_crime, interval = "prediction")
ggplot(data, aes(x=crim, y=log(medv))) +
geom_point(size=1, alpha=0.7) +
#geom_smooth(method = 'lm', formula = y ~ x, aes(colour="Linear"))  +
#geom_smooth(method = 'loess', formula = y ~ x, aes(colour="Loess")) +
#scale_colour_manual(name="Smoothers", values=c("blue", "red")) +
#geom_abline(intercept = coef(logmedv_lm)[1], slope = coef(logmedv_lm)[2], col='red') +
labs(color="Lines:") +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,1], colour = "Fit")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 4))
new_conf = predict(logmedv_lm, newdata = new_crime, interval = "confidence", level=0.9)
new_pred = predict(logmedv_lm, newdata = new_crime, interval = "prediction")
ggplot(data, aes(x=crim, y=log(medv))) +
geom_point(size=1, alpha=0.7) +
#geom_smooth(method = 'lm', formula = y ~ x, aes(colour="Linear"))  +
#geom_smooth(method = 'loess', formula = y ~ x, aes(colour="Loess")) +
#scale_colour_manual(name="Smoothers", values=c("blue", "red")) +
#geom_abline(intercept = coef(logmedv_lm)[1], slope = coef(logmedv_lm)[2], col='red') +
labs(color="Lines:") +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,1], colour = "Fit")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 4))
new_conf = predict(logmedv_lm, newdata = new_crime, interval = "confidence", level=0.95)
new_pred = predict(logmedv_lm, newdata = new_crime, interval = "prediction")
ggplot(data, aes(x=crim, y=log(medv))) +
geom_point(size=1, alpha=0.7) +
#geom_smooth(method = 'lm', formula = y ~ x, aes(colour="Linear"))  +
#geom_smooth(method = 'loess', formula = y ~ x, aes(colour="Loess")) +
#scale_colour_manual(name="Smoothers", values=c("blue", "red")) +
#geom_abline(intercept = coef(logmedv_lm)[1], slope = coef(logmedv_lm)[2], col='red') +
labs(color="Lines:") +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,1], colour = "Fit")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 4))
new_conf = predict(logmedv_lm, newdata = new_crime, interval = "confidence", level=0.99)
new_pred = predict(logmedv_lm, newdata = new_crime, interval = "prediction")
ggplot(data, aes(x=crim, y=log(medv))) +
geom_point(size=1, alpha=0.7) +
#geom_smooth(method = 'lm', formula = y ~ x, aes(colour="Linear"))  +
#geom_smooth(method = 'loess', formula = y ~ x, aes(colour="Loess")) +
#scale_colour_manual(name="Smoothers", values=c("blue", "red")) +
#geom_abline(intercept = coef(logmedv_lm)[1], slope = coef(logmedv_lm)[2], col='red') +
labs(color="Lines:") +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,1], colour = "Fit")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 4))
new_conf = predict(logmedv_lm, newdata = new_crime, interval = "confidence", level=1)
new_pred = predict(logmedv_lm, newdata = new_crime, interval = "prediction")
ggplot(data, aes(x=crim, y=log(medv))) +
geom_point(size=1, alpha=0.7) +
#geom_smooth(method = 'lm', formula = y ~ x, aes(colour="Linear"))  +
#geom_smooth(method = 'loess', formula = y ~ x, aes(colour="Loess")) +
#scale_colour_manual(name="Smoothers", values=c("blue", "red")) +
#geom_abline(intercept = coef(logmedv_lm)[1], slope = coef(logmedv_lm)[2], col='red') +
labs(color="Lines:") +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,1], colour = "Fit")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 4))
new_conf = predict(logmedv_lm, newdata = new_crime, interval = "confidence", level=0.999999)
new_pred = predict(logmedv_lm, newdata = new_crime, interval = "prediction")
ggplot(data, aes(x=crim, y=log(medv))) +
geom_point(size=1, alpha=0.7) +
#geom_smooth(method = 'lm', formula = y ~ x, aes(colour="Linear"))  +
#geom_smooth(method = 'loess', formula = y ~ x, aes(colour="Loess")) +
#scale_colour_manual(name="Smoothers", values=c("blue", "red")) +
#geom_abline(intercept = coef(logmedv_lm)[1], slope = coef(logmedv_lm)[2], col='red') +
labs(color="Lines:") +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,1], colour = "Fit")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 4))
new_pred = predict(logmedv_lm, newdata = new_crime, interval = "prediction", level=0.95)
new_conf = predict(logmedv_lm, newdata = new_crime, interval = "confidence", level=0.95)
new_pred = predict(logmedv_lm, newdata = new_crime, interval = "prediction", level=0.95)
ggplot(data, aes(x=crim, y=log(medv))) +
geom_point(size=1, alpha=0.7) +
#geom_smooth(method = 'lm', formula = y ~ x, aes(colour="Linear"))  +
#geom_smooth(method = 'loess', formula = y ~ x, aes(colour="Loess")) +
#scale_colour_manual(name="Smoothers", values=c("blue", "red")) +
#geom_abline(intercept = coef(logmedv_lm)[1], slope = coef(logmedv_lm)[2], col='red') +
labs(color="Lines:") +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,1], colour = "Fit")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 4))
?predict
ggplot(data, aes(x=crim, y=log(medv))) +
geom_point(size=1, alpha=0.7) +
labs(color="Lines:") +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,1], colour = "Fit")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable (Tolerance Level - 5%") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 4))
ggplot(data, aes(x=crim, y=log(medv))) +
geom_point(size=1, alpha=0.7) +
labs(color="Lines:") +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,1], colour = "Fit")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable (Tolerance - 5%") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 4))
ggplot(data, aes(x=crim, y=log(medv))) +
geom_point(size=1, alpha=0.7) +
labs(color="Lines:") +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,1], colour = "Fit")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable (Tolerance - 5%")) +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 4))
ggplot(data, aes(x=crim, y=log(medv))) +
geom_point(size=1, alpha=0.7) +
labs(color="Lines:") +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,1], colour = "Fit")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable (Tolerance - 5%)") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 4))
?boxcox
# Porovnáme naši transformaci s transformací navrženou Box-Coxem:
boxcom(medv_lm)
# Porovnáme naši transformaci s transformací navrženou Box-Coxem:
boxcox(medv_lm)
par(opar)
# Porovnáme naši transformaci s transformací navrženou Box-Coxem:
boxcox(medv_lm)
# Porovnáme naši transformaci s transformací navrženou Box-Coxem:
opar <- par(mfrow=c(1,1))
boxcox(medv_lm)
par(opar)
# Porovnáme naši transformaci s transformací navrženou Box-Coxem:
dev.off()
boxcox(medv_lm)
?boxcox
# Log-věrohodnostní profil Box-Coxovy transformace:
boxcox(medv_lm)
# Nový model s použitím Box-Coxovy transformace.
boxcoxmedv_lm <- update(medv_lm, . ~ . + boxCoxVariable(crim))
# Nový model s použitím Box-Coxovy transformace.
medv_lm_bc<- update(medv_lm, . ~ . + boxCoxVariable(crim))
summary(medv_lm_bc)
avPlots(medv_lm_bc)
# Nový model s použitím Box-Coxovy transformace.
medv_lm_bc <- update(medv_lm, . ~ boxCoxVariable(crim))
summary(medv_lm_bc)
avPlots(medv_lm_bc)
# Nový model s použitím Box-Coxovy transformace.
medv_lm_bc <- update(medv_lm, . ~ . + boxCoxVariable(crim))
summary(medv_lm_bc)
avPlots(medv_lm_bc)
new_conf_bc = predict(medv_lm_bc, newdata = new_crime, interval = "confidence", level=0.95)
new_pred_bc = predict(medv_lm_bc, newdata = new_crime, interval = "prediction", level=0.95)
ggplot(data, aes(x=crim, y=log(medv))) +
geom_point(size=1, alpha=0.7) +
labs(color="Lines:") +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf_bc[,1], colour = "Fit")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf_bc[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf_bc[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred_bc[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred_bc[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable (Tolerance - 5%)") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 4))
ggplot(data, aes(x=crim, y=medv)) +
geom_point(size=1, alpha=0.7) +
labs(color="Lines:") +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf_bc[,1], colour = "Fit")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf_bc[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf_bc[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred_bc[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred_bc[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable (Tolerance - 5%)") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 4))
ggplot(data, aes(x=crim, y=medv)) +
geom_point(size=1, alpha=0.7) +
labs(color="Lines:") +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf_bc[,1], colour = "Fit")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf_bc[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf_bc[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred_bc[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred_bc[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable (Tolerance - 5%)") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 25))
new_conf_bc
# Nový model s použitím Box-Coxovy transformace.
medv_lm_bc <- update(medv_lm, . ~  boxCoxVariable(crim))
summary(medv_lm_bc)
avPlots(medv_lm_bc)
new_conf_bc = predict(medv_lm_bc, newdata = new_crime, interval = "confidence", level=0.95)
new_pred_bc = predict(medv_lm_bc, newdata = new_crime, interval = "prediction", level=0.95)
ggplot(data, aes(x=crim, y=medv)) +
geom_point(size=1, alpha=0.7) +
labs(color="Lines:") +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf_bc[,1], colour = "Fit")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf_bc[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf_bc[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred_bc[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred_bc[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable (Tolerance - 5%)") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 25))
new_conf_bc
new_pred_bc
new_crime
medv_lm_bc
ggplot(data, aes(x=crim, y=medv)) +
geom_point(size=1, alpha=0.7) +
labs(color="Lines:") +
geom_abline(intercept = coef(new_pred_bc)[1], slope = coef(new_pred_bc)[2], col='darkblue') +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable (Tolerance - 5%)") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 30))
ggplot(data, aes(x=crim, y=medv)) +
geom_point(size=1, alpha=0.7) +
geom_abline(intercept = coef(new_pred_bc)[1], slope = coef(new_pred_bc)[2], col='darkblue') +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable (Tolerance - 5%)") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 30))
ggplot(data, aes(x=crim, y=medv)) +
geom_point(size=1, alpha=0.7) +
geom_abline(intercept = coef(medv_lm_bc)[1], slope = coef(medv_lm_bc)[2], col='darkblue') +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable (Tolerance - 5%)") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 30))
# Nový model s použitím Box-Coxovy transformace.
medv_lm_bc <- update(medv_lm, . ~ boxCoxVariable(crim))
summary(medv_lm_bc)
avPlots(medv_lm_bc)
ggplot(data, aes(x=crim, y=medv)) +
geom_point(size=1, alpha=0.7) +
geom_abline(intercept = coef(medv_lm_bc)[1], slope = coef(medv_lm_bc)[2], col='darkblue') +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable (Tolerance - 5%)") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 30))
# Nový model s použitím Box-Coxovy transformace.
medv_lm_bc <- update(medv_lm, . ~ . + boxCoxVariable(crim))
summary(medv_lm_bc)
ggplot(data, aes(x=boxCoxVariable(crim), y=medv)) +
geom_point(size=1, alpha=0.7) +
geom_abline(intercept = coef(medv_lm_bc)[1], slope = coef(medv_lm_bc)[2], col='darkblue') +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable (Tolerance - 5%)") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 30))
ggplot(data, aes(x=boxCoxVariable(crim), y=boxCoxVariable(medv)) +
ggplot(data, aes(x=boxCoxVariable(crim), y=boxCoxVariable(medv))) +
geom_point(size=1, alpha=0.7) +
geom_abline(intercept = coef(medv_lm_bc)[1], slope = coef(medv_lm_bc)[2], col='darkblue') +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable (Tolerance - 5%)") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 30))
avPlots(medv_lm_bc)
avPlots(medv_lm_bc)
ggplot(data, aes(x=crim, y=medv)) +
geom_point(size=1, alpha=0.7) +
geom_abline(intercept = coef(medv_lm_bc)[1], slope = coef(medv_lm_bc)[2], col='darkblue') +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable (Tolerance - 5%)") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 30))
ggplot(data, aes(x=crim, y=medv)) +
geom_point(size=1, alpha=0.7) +
geom_abline(intercept = coef(medv_lm_bc)[1], slope = coef(medv_lm_bc)[2], col='darkblue') +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable (Tolerance - 5%)") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 50))
ggplot(data, aes(x=crim, y=medv)) +
geom_point(size=1, alpha=0.7) +
geom_abline(intercept = coef(medv_lm_bc)[1], slope = coef(medv_lm_bc)[2], col='darkblue') +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 50))
ggplot(data, aes(x=crim, y=medv)) +
geom_point(size=1, alpha=0.7) +
geom_abline(intercept = coef(medv_lm_bc)[1], slope = coef(medv_lm_bc)[2], col='darkblue') +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Mean Value of Owner-Occupied Homes") +
ggtitle("Box-Cox Transformation") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 50))
# Nový model s použitím Box-Coxovy transformace.
medv_lm_bc <- update(medv_lm, . ~ boxCoxVariable(crim))
summary(medv_lm_bc)
avPlots(medv_lm_bc)
ggplot(data, aes(x=crim, y=medv)) +
geom_point(size=1, alpha=0.7) +
geom_abline(intercept = coef(medv_lm_bc)[1], slope = coef(medv_lm_bc)[2], col='darkblue') +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Mean Value of Owner-Occupied Homes") +
ggtitle("Box-Cox Transformation") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 50))
ggplot(data, aes(x=crim, y=medv)) +
geom_point(size=1, alpha=0.7) +
geom_abline(intercept = coef(medv_lm_bc)[1], slope = coef(medv_lm_bc)[2], aes(colour="Box-Cox")) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Mean Value of Owner-Occupied Homes") +
ggtitle("Box-Cox Transformation") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 50))
?boxCox
# Use SLID data from car package
? SLID
summary(SLID)
SLID <- na.omit(SLID) # remove NA's
summary(SLID)
mod0 <- lm(wages ~ sex + age + education, data=SLID)
boxcox(mod0)
mod_bc <- update(mod0, . ~ . + boxCoxVariable(wages))
summary(mod_bc)
avPlots(mod_bc)  # constructed-variable plot
?boxCoxVariable
ggplot(data, aes(x=crim, y=medv)) +
geom_point(size=1, alpha=0.7) +
geom_abline(intercept = coef(medv_lm_bc)[1], slope = coef(medv_lm_bc)[2], aes(colour="Box-Cox")) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Mean Value of Owner-Occupied Homes") +
ggtitle("Box-Cox Transformation") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 50))
# Nový model s použitím Box-Coxovy transformace.
medv_lm_bc <- update(medv_lm, . ~ boxCoxVariable(crim))
summary(medv_lm_bc)
avPlots(medv_lm_bc)
ggplot(data, aes(x=crim, y=medv)) +
geom_point(size=1, alpha=0.7) +
geom_abline(intercept = coef(medv_lm_bc)[1], slope = coef(medv_lm_bc)[2], aes(colour="Box-")) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Mean Value of Owner-Occupied Homes") +
ggtitle("Box-Cox Transformation") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 50))
ggplot(data, aes(x=crim, y=medv)) +
geom_point(size=1, alpha=0.7) +
geom_abline(intercept = coef(medv_lm_bc)[1], slope = coef(medv_lm_bc)[2], col="darkblue") +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Mean Value of Owner-Occupied Homes") +
ggtitle("Box-Cox Transformation") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 50))
summary(medv_lm_bc)
ggplot(data, aes(x=crim, y=medv)) +
geom_point(size=1, alpha=0.7) +
geom_abline(intercept = coef(medv_lm_bc)[1], slope = coef(medv_lm_bc)[2], col="darkblue") +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Mean Value of Owner-Occupied Homes") +
ggtitle("Box-Cox Transformation") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 50))
boxCoxVariable(crim)
?boxCoxVariable
# Nový model s použitím Box-Coxovy transformace.
medv_lm_bc <- update(medv_lm, . ~ boxCoxVariable(medv))
summary(medv_lm_bc)
ggplot(data, aes(x=crim, y=medv)) +
geom_point(size=1, alpha=0.7) +
geom_abline(intercept = coef(medv_lm_bc)[1], slope = coef(medv_lm_bc)[2], col="darkblue") +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Mean Value of Owner-Occupied Homes") +
ggtitle("Box-Cox Transformation") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 50))
summary(medv_lm_bc)
