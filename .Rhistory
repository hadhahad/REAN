coef(logboston_lm
coef(logboston_lm)
coef(logboston_lm)[2]
exp(coef(logboston_lm)[2])
exp_beta1 <- exp(coef(logboston_lm)[2]*0.1)
# Je to kladné číslo menší než jedna vyjádřující poměr E[Y|X=x+0.1]/E[Y|X=x].
# Tedy (1-exp_beta1)*100 % vyjadřuje o kolik procent klesne cena nemovitosti
# při nárustu míry kriminality o 1 jendotku.
(1-exp_beta1)*100
exp_beta1 <- exp(coef(logboston_lm)[2]*0.1)
# Je to kladné číslo menší než jedna vyjádřující poměr E[Y|X=x+0.1]/E[Y|X=x].
# Tedy (1-exp_beta1)*100 % vyjadřuje o kolik procent klesne cena nemovitosti
# při nárustu 'nox' o 0.1.
(1-exp_beta1)*100
exp_beta1 <- exp(coef(logboston_lm)[2]*0.1)
# Je to kladné číslo menší než jedna vyjádřující poměr E[Y|X=x+0.1]/E[Y|X=x].
# Tedy (1-exp_beta1)*100 % vyjadřuje o kolik procent klesne cena nemovitosti
# při nárustu 'nox' o 0.1.
(1-exp_beta1)*100
### (1) Lineární transformace. ###
lin_boston_lm <- lm(medv ~ poly(nox, degree=1, raw=TRUE), data = newBoston)
summary(lin_boston_lm)
new_boston_linear <- predict(lin_boston_lm, newdata = new_crime)
new_boston_linear <- predict(lin_boston_lm, newdata = new_nox)
crPlots(lin_boston_lm)
dev.off()
### (1) Lineární transformace. ###
lin_boston_lm <- lm(medv ~ poly(nox, degree=1, raw=TRUE), data = newBoston)
summary(lin_boston_lm)
new_boston_linear <- predict(lin_boston_lm, newdata = new_nox)
crPlots(lin_boston_lm)
### (2) Kvadratická polynomiální transformace. ###
quadratic_boston_lm <- lm(medv ~ poly(crim, degree=2, raw=TRUE), Boston)
### (2) Kvadratická polynomiální transformace. ###
quadratic_boston_lm <- lm(medv ~ poly(nox, degree=2, raw=TRUE), data = newBoston)
summary(quadratic_boston_lm)
new_boston_quadratic <- predict(quadratic_boston_lm, newdata = new_nox)
crPlots(cubic_boston_lm)
### (2) Kvadratická polynomiální transformace. ###
quadratic_boston_lm <- lm(medv ~ poly(nox, degree=2, raw=TRUE), data = newBoston)
summary(quadratic_boston_lm)
new_boston_quadratic <- predict(quadratic_boston_lm, newdata = new_nox)
crPlots(quadratic_boston_lm)
### (3) Kubická polynomiální transformace. ###
cubic_boston_lm <- lm(medv ~ poly(crim, degree=3, raw=TRUE), Boston)
### (3) Kubická polynomiální transformace. ###
cubic_boston_lm <- lm(medv ~ poly(nox, degree=3, raw=TRUE), data = newBoston)
summary(cubic_boston_lm)  # Je vidět, že proměnná se stupněm 3 už není tak signifikantní.
### (2) Kvadratická polynomiální transformace. ###
quadratic_boston_lm <- lm(medv ~ poly(nox, degree=2, raw=TRUE), data = newBoston)
summary(quadratic_boston_lm)
### (3) Kubická polynomiální transformace. ###
cubic_boston_lm <- lm(medv ~ poly(nox, degree=3, raw=TRUE), data = newBoston)
summary(cubic_boston_lm)  # Je vidět, že proměnná se stupněm 3 už není tak signifikantní.
new_boston_cubic <- predict(cubic_boston_lm, newdata = new_nox)
crPlots(cubic_boston_lm)  # Neliší se od předchozího crPlots pro kvadratickou transformaci.
summary(cubic_boston_lm)  # Je vidět, že proměnná se stupněm 3 už není tak signifikantní.
### (4) Splines. ###
splines_boston_lm <- lm(medv ~ bs(nox,knots=c(0.1),degree=1,Boundary.knots=c(0.385, 0.8710)), data = newBoston)
summary(splines_boston_lm)
new_boston_splines <- predict(splines_boston_lm, newdata = new_crime)
transf_plot <- ggplot(Boston, aes(x=crim, y=medv)) +
geom_point(size=1, alpha=0.7) +
# geom_line(aes(x=new_crime, y=new_boston_piecewise, colour="Piecewise Regression Line")) +
geom_line(aes(x=new_crime, y=new_boston_linear, colour="Linear Transformation")) +
geom_line(aes(x=new_crime, y=new_boston_quadratic, colour="Quadratic Transformation")) +
geom_line(aes(x=new_crime, y=new_boston_cubic, colour="Cubic Transformation")) +
geom_line(aes(x=new_crime, y=new_boston_splines, colour="Splines Transformation")) +
labs(color="Lines:") +
theme_bw() +
xlab("Nitrogen Oxides Concentration (parts per 10 million)") +
ylab("Mean Value of Owner-Occupied Homes") +
ggtitle("Transformations of the Dependant Variable - Boston Dataset") +
coord_cartesian(xlim=c(0.385, 0.8710), ylim=c(0, 50))
transf_plot
transf_plot <- ggplot(Boston, aes(x=nox, y=medv)) +
geom_point(size=1, alpha=0.7) +
# geom_line(aes(x=new_crime, y=new_boston_piecewise, colour="Piecewise Regression Line")) +
geom_line(aes(x=new_crime, y=new_boston_linear, colour="Linear Transformation")) +
geom_line(aes(x=new_crime, y=new_boston_quadratic, colour="Quadratic Transformation")) +
geom_line(aes(x=new_crime, y=new_boston_cubic, colour="Cubic Transformation")) +
geom_line(aes(x=new_crime, y=new_boston_splines, colour="Splines Transformation")) +
labs(color="Lines:") +
theme_bw() +
xlab("Nitrogen Oxides Concentration (parts per 10 million)") +
ylab("Mean Value of Owner-Occupied Homes") +
ggtitle("Transformations of the Dependant Variable - Boston Dataset") +
coord_cartesian(xlim=c(0.385, 0.8710), ylim=c(0, 50))
transf_plot
transf_plot <- ggplot(Boston, aes(x=nox, y=medv)) +
geom_point(size=1, alpha=0.7) +
# geom_line(aes(x=new_crime, y=new_boston_piecewise, colour="Piecewise Regression Line")) +
geom_line(aes(x=new_nox, y=new_boston_linear, colour="Linear Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_quadratic, colour="Quadratic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_cubic, colour="Cubic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_splines, colour="Splines Transformation")) +
labs(color="Lines:") +
theme_bw() +
xlab("Nitrogen Oxides Concentration (parts per 10 million)") +
ylab("Mean Value of Owner-Occupied Homes") +
ggtitle("Transformations of the Dependant Variable - Boston Dataset") +
coord_cartesian(xlim=c(0.385, 0.8710), ylim=c(0, 50))
transf_plot
transf_plot <- ggplot(newBoston, aes(x=nox, y=medv)) +
geom_point(size=1, alpha=0.7) +
# geom_line(aes(x=new_crime, y=new_boston_piecewise, colour="Piecewise Regression Line")) +
geom_line(aes(x=new_nox, y=new_boston_linear, colour="Linear Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_quadratic, colour="Quadratic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_cubic, colour="Cubic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_splines, colour="Splines Transformation")) +
labs(color="Lines:") +
theme_bw() +
xlab("Nitrogen Oxides Concentration (parts per 10 million)") +
ylab("Mean Value of Owner-Occupied Homes") +
ggtitle("Transformations of the Dependant Variable - Boston Dataset") +
coord_cartesian(xlim=c(0.385, 0.8710), ylim=c(0, 50))
transf_plot
new_boston_splines <- predict(splines_boston_lm, newdata = new_nox)
transf_plot <- ggplot(newBoston, aes(x=nox, y=medv)) +
geom_point(size=1, alpha=0.7) +
# geom_line(aes(x=new_crime, y=new_boston_piecewise, colour="Piecewise Regression Line")) +
geom_line(aes(x=new_nox, y=new_boston_linear, colour="Linear Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_quadratic, colour="Quadratic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_cubic, colour="Cubic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_splines, colour="Splines Transformation")) +
labs(color="Lines:") +
theme_bw() +
xlab("Nitrogen Oxides Concentration (parts per 10 million)") +
ylab("Mean Value of Owner-Occupied Homes") +
ggtitle("Transformations of the Dependant Variable - Boston Dataset") +
coord_cartesian(xlim=c(0.385, 0.8710), ylim=c(0, 50))
transf_plot
### (4) Splines. ###
splines_boston_lm <- lm(medv ~ bs(nox,knots=c(0.72),degree=3,Boundary.knots=c(0.385, 0.8710)), data = newBoston)
summary(splines_boston_lm)
new_boston_splines <- predict(splines_boston_lm, newdata = new_nox)
transf_plot <- ggplot(newBoston, aes(x=nox, y=medv)) +
geom_point(size=1, alpha=0.7) +
# geom_line(aes(x=new_crime, y=new_boston_piecewise, colour="Piecewise Regression Line")) +
geom_line(aes(x=new_nox, y=new_boston_linear, colour="Linear Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_quadratic, colour="Quadratic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_cubic, colour="Cubic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_splines, colour="Splines Transformation")) +
labs(color="Lines:") +
theme_bw() +
xlab("Nitrogen Oxides Concentration (parts per 10 million)") +
ylab("Mean Value of Owner-Occupied Homes") +
ggtitle("Transformations of the Dependant Variable - Boston Dataset") +
coord_cartesian(xlim=c(0.385, 0.8710), ylim=c(0, 50))
transf_plot
### (4) Splines. ###
splines_boston_lm <- lm(medv ~ bs(nox,knots=c(0.7, 0.77),degree=3,Boundary.knots=c(0.385, 0.8710)), data = newBoston)
summary(splines_boston_lm)
new_boston_splines <- predict(splines_boston_lm, newdata = new_nox)
transf_plot <- ggplot(newBoston, aes(x=nox, y=medv)) +
geom_point(size=1, alpha=0.7) +
# geom_line(aes(x=new_crime, y=new_boston_piecewise, colour="Piecewise Regression Line")) +
geom_line(aes(x=new_nox, y=new_boston_linear, colour="Linear Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_quadratic, colour="Quadratic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_cubic, colour="Cubic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_splines, colour="Splines Transformation")) +
labs(color="Lines:") +
theme_bw() +
xlab("Nitrogen Oxides Concentration (parts per 10 million)") +
ylab("Mean Value of Owner-Occupied Homes") +
ggtitle("Transformations of the Dependant Variable - Boston Dataset") +
coord_cartesian(xlim=c(0.385, 0.8710), ylim=c(0, 50))
transf_plot
### (4) Splines. ###
splines_boston_lm <- lm(medv ~ bs(nox,knots=c(0.7, 0.77),degree=2,Boundary.knots=c(0.385, 0.8710)), data = newBoston)
summary(splines_boston_lm)
new_boston_splines <- predict(splines_boston_lm, newdata = new_nox)
transf_plot <- ggplot(newBoston, aes(x=nox, y=medv)) +
geom_point(size=1, alpha=0.7) +
# geom_line(aes(x=new_crime, y=new_boston_piecewise, colour="Piecewise Regression Line")) +
geom_line(aes(x=new_nox, y=new_boston_linear, colour="Linear Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_quadratic, colour="Quadratic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_cubic, colour="Cubic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_splines, colour="Splines Transformation")) +
labs(color="Lines:") +
theme_bw() +
xlab("Nitrogen Oxides Concentration (parts per 10 million)") +
ylab("Mean Value of Owner-Occupied Homes") +
ggtitle("Transformations of the Dependant Variable - Boston Dataset") +
coord_cartesian(xlim=c(0.385, 0.8710), ylim=c(0, 50))
transf_plot
### (4) Splines. ###
splines_boston_lm <- lm(medv ~ bs(nox,knots=c(0.65, 0.7, 0.77),degree=2,Boundary.knots=c(0.385, 0.8710)), data = newBoston)
summary(splines_boston_lm)
new_boston_splines <- predict(splines_boston_lm, newdata = new_nox)
transf_plot <- ggplot(newBoston, aes(x=nox, y=medv)) +
geom_point(size=1, alpha=0.7) +
# geom_line(aes(x=new_crime, y=new_boston_piecewise, colour="Piecewise Regression Line")) +
geom_line(aes(x=new_nox, y=new_boston_linear, colour="Linear Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_quadratic, colour="Quadratic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_cubic, colour="Cubic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_splines, colour="Splines Transformation")) +
labs(color="Lines:") +
theme_bw() +
xlab("Nitrogen Oxides Concentration (parts per 10 million)") +
ylab("Mean Value of Owner-Occupied Homes") +
ggtitle("Transformations of the Dependant Variable - Boston Dataset") +
coord_cartesian(xlim=c(0.385, 0.8710), ylim=c(0, 50))
transf_plot
### (4) Splines. ###
splines_boston_lm <- lm(medv ~ bs(nox,knots=c(0.65, 0.7, 0.77),degree=1,Boundary.knots=c(0.385, 0.8710)), data = newBoston)
summary(splines_boston_lm)
new_boston_splines <- predict(splines_boston_lm, newdata = new_nox)
transf_plot <- ggplot(newBoston, aes(x=nox, y=medv)) +
geom_point(size=1, alpha=0.7) +
# geom_line(aes(x=new_crime, y=new_boston_piecewise, colour="Piecewise Regression Line")) +
geom_line(aes(x=new_nox, y=new_boston_linear, colour="Linear Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_quadratic, colour="Quadratic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_cubic, colour="Cubic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_splines, colour="Splines Transformation")) +
labs(color="Lines:") +
theme_bw() +
xlab("Nitrogen Oxides Concentration (parts per 10 million)") +
ylab("Mean Value of Owner-Occupied Homes") +
ggtitle("Transformations of the Dependant Variable - Boston Dataset") +
coord_cartesian(xlim=c(0.385, 0.8710), ylim=c(0, 50))
transf_plot
### Podívejme se na rezidua modelů. ###
opar <- par(mfrow=c(2,2))
plot(lin_boston_lm) # Tento model nesplňuje symetrii reziduí (je přítomná nelineární závislost) ani jejich normalitu.
plot(quadratic_boston_lm)
plot(cubic_boston_lm)
plot(splines_boston_lm)
### Podívejme se na rezidua modelů. ###
opar <- par(mfrow=c(2,2))
plot(lin_boston_lm) # Tento model nesplňuje symetrii reziduí (je přítomná nelineární závislost) ani jejich normalitu.
plot(quadratic_boston_lm)
plot(cubic_boston_lm)
plot(splines_boston_lm)
const_boston_lm <- segmented(lm(medv ~ nox, data = newBoston), seg.Z = ~ nox)
const_boston_lm <- segmented(lm(medv ~ nox, data = newBoston), seg.Z = ~ nox)
summary(const_boston_lm)
new_boston_piecewise <- predict(const_boston_lm, newdata = new_nox)
transf_plot <- ggplot(newBoston, aes(x=nox, y=medv)) +
geom_point(size=1, alpha=0.7) +
geom_line(aes(x=new_nox, y=new_boston_piecewise, colour="Piecewise Regression Line")) +
geom_line(aes(x=new_nox, y=new_boston_linear, colour="Linear Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_quadratic, colour="Quadratic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_cubic, colour="Cubic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_splines, colour="Splines Transformation")) +
labs(color="Lines:") +
theme_bw() +
xlab("Nitrogen Oxides Concentration (parts per 10 million)") +
ylab("Mean Value of Owner-Occupied Homes") +
ggtitle("Transformations of the Dependant Variable - Boston Dataset") +
coord_cartesian(xlim=c(0.385, 0.8710), ylim=c(0, 50))
transf_plot
### (4) Splines. ###
splines_boston_lm <- lm(medv ~ bs(nox,knots=c(0.695),degree=1,Boundary.knots=c(0.385, 0.8710)), data = newBoston)
summary(splines_boston_lm)
new_boston_splines <- predict(splines_boston_lm, newdata = new_nox)
transf_plot <- ggplot(newBoston, aes(x=nox, y=medv)) +
geom_point(size=1, alpha=0.7) +
# geom_line(aes(x=new_nox, y=new_boston_piecewise, colour="Piecewise Regression Line")) +
geom_line(aes(x=new_nox, y=new_boston_linear, colour="Linear Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_quadratic, colour="Quadratic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_cubic, colour="Cubic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_splines, colour="Splines Transformation")) +
labs(color="Lines:") +
theme_bw() +
xlab("Nitrogen Oxides Concentration (parts per 10 million)") +
ylab("Mean Value of Owner-Occupied Homes") +
ggtitle("Transformations of the Dependant Variable - Boston Dataset") +
coord_cartesian(xlim=c(0.385, 0.8710), ylim=c(0, 50))
transf_plot
### Podívejme se na rezidua modelů. ###
opar <- par(mfrow=c(2,2))
summary(splines_boston_lm)
summary(const_boston_lm)
summary(cubic_boston_lm)
summary(lin_boston_lm)
summary(quadratic_boston_lm)
summary(cubic_boston_lm)
summary(splines_boston_lm)
# Zobrazíme si tyto transformace:
transf_plot <- ggplot(newBoston, aes(x=nox, y=medv)) +
geom_point(size=1, alpha=0.7) +
# geom_line(aes(x=new_nox, y=new_boston_piecewise, colour="Piecewise Regression Line")) +
geom_line(aes(x=new_nox, y=new_boston_linear, colour="Linear Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_quadratic, colour="Quadratic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_cubic, colour="Cubic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_splines, colour="Splines Transformation")) +
labs(color="Lines:") +
theme_bw() +
xlab("Nitrogen Oxides Concentration (parts per 10 million)") +
ylab("Mean Value of Owner-Occupied Homes") +
ggtitle("Transformations of the Dependant Variable - Boston Dataset") +
coord_cartesian(xlim=c(0.385, 0.8710), ylim=c(0, 50))
transf_plot
### Podívejme se na rezidua modelů. ###
opar <- par(mfrow=c(2,2))
plot(lin_boston_lm) # Tento model nesplňuje symetrii reziduí (je přítomná nelineární závislost) ani jejich normalitu.
plot(quadratic_boston_lm)
plot(cubic_boston_lm)
plot(splines_boston_lm)
logsplines_boston_lm <- lm(log(medv) ~ bs(nox,knots=c(0.695),degree=1,Boundary.knots=c(0.385, 0.8710)), data = newBoston)
summary(logsplines_boston_lm)
# Logaritmizací odezvy jsme se docíleli zvětšení koeficientu determinace.
plot(logsplines_boston_lm)
### Nakreslíme si Scatter Plot s konfidenčními a prediction intervaly na hladine významnosti 5 %: ###
new_conf = predict(logsplines_boston_lm, newdata = new_nox, interval = "confidence", level=0.95)
new_pred = predict(logsplines_boston_lm, newdata = new_nox, interval = "prediction", level=0.95)
boston_crime_final_p1<- ggplot(newBoston, aes(x=nox, y=log(medv))) +
geom_point(size=1, alpha=0.7) +
labs(color="Lines:") +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,1], colour = "Fit")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Mean Value of Owner-Occupied Homes vs. Criminality") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 4))
boston_crime_final_p1
new_pred = predict(logsplines_boston_lm, newdata = new_nox, interval = "prediction", level=0.95)
logtrans_p1<- ggplot(newBoston, aes(x=nox, y=log(medv))) +
geom_point(size=1, alpha=0.7) +
labs(color="Lines:") +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_conf[,1], colour = "Fit")) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_conf[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_conf[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_pred[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_pred[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Nitrogen Oxides Concentration (parts per 10 million)") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable (Tolerance - 5%)") +
coord_cartesian(xlim=c(0.385, 0.8710), ylim=c(1, 4))
logtrans_p1
logtrans_p1<- ggplot(newBoston, aes(x=nox, y=log(medv))) +
geom_point(size=1, alpha=0.7) +
labs(color="Lines:") +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_conf[,1], colour = "Fit")) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_conf[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_conf[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_pred[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_pred[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Nitrogen Oxides Concentration (parts per 10 million)") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable (Tolerance - 5%)") +
coord_cartesian(xlim=c(0.385, 0.8710), ylim=c(0, 10))
logtrans_p1
logtrans_p1<- ggplot(newBoston, aes(x=nox, y=log(medv))) +
geom_point(size=1, alpha=0.7) +
labs(color="Lines:") +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_conf[,1], colour = "Fit")) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_conf[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_conf[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_pred[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_pred[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Nitrogen Oxides Concentration (parts per 10 million)") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable (Tolerance - 5%)") +
coord_cartesian(xlim=c(0.385, 0.8710), ylim=c(1, 4.5))
logtrans_p1
logtrans_p1<- ggplot(newBoston, aes(x=nox, y=log(medv))) +
geom_point(size=1, alpha=0.7) +
labs(color="Lines:") +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_conf[,1], colour = "Fit")) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_conf[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_conf[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_pred[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_pred[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Nitrogen Oxides Concentration (parts per 10 million)") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable (Tolerance - 5%)") +
coord_cartesian(xlim=c(0.385, 0.8710), ylim=c(1.5, 4.2))
logtrans_p1
logtrans_p1<- ggplot(newBoston, aes(x=nox, y=log(medv))) +
geom_point(size=1, alpha=0.7) +
labs(color="Lines:") +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_conf[,1], colour = "Fit")) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_conf[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_conf[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_pred[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_pred[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Nitrogen Oxides Concentration (parts per 10 million)") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Linear Model with Log-Transformation of the Dependant Variable (Tolerance - 5%)") +
coord_cartesian(xlim=c(0.385, 0.8710), ylim=c(1.5, 4))
logtrans_p1
### (3) Porovnáme naši transformaci s transformací navrženou Box-Coxem: ###
dev.off()
# Log-věrohodnostní profil Box-Coxovy transformace:
boxcox(boston_lm)
# Nový model s použitím Box-Coxovy transformace.
lambda <- BoxCox.lambda(Boston$medv)
medv_bc <- BoxCox(Boston$medv, lambda)
boston_lm_bc <- lm(medv_bc ~ nox, Boston)
summary(boston_lm_bc)
summary(logboston_lm)
# Nakonec se podíváme na chování reziduí obou modelů:
opar <- par(mfrow=c(2,2))
plot(boston_lm_bc)  # Box-Coxova transformace pro \lambda=-0.2380317
plot(logboston_lm)  # Logaritmická transformace odezvy
par(opar)
# Ještě jednou se podívejme na logaritmickou transformaci odezvy 'medv':
logtrans_p1
exp_beta1 <- exp(coef(logboston_lm)[2]*0.1)
# Je to kladné číslo menší než jedna vyjádřující poměr E[Y|X=x+0.1]/E[Y|X=x].
# Tedy (1-exp_beta1)*100 % vyjadřuje o kolik procent klesne cena nemovitosti
# při nárustu 'nox' o 0.1.
(1-exp_beta1)*100
dev.off()
### (1) Lineární transformace. ###
lin_boston_lm <- lm(medv ~ poly(nox, degree=1, raw=TRUE), data = newBoston)
summary(lin_boston_lm)
new_boston_linear <- predict(lin_boston_lm, newdata = new_nox)
crPlots(lin_boston_lm)
### (2) Kvadratická polynomiální transformace. ###
quadratic_boston_lm <- lm(medv ~ poly(nox, degree=2, raw=TRUE), data = newBoston)
summary(quadratic_boston_lm)
new_boston_quadratic <- predict(quadratic_boston_lm, newdata = new_nox)
crPlots(quadratic_boston_lm)
### (3) Kubická polynomiální transformace. ###
cubic_boston_lm <- lm(medv ~ poly(nox, degree=3, raw=TRUE), data = newBoston)
summary(cubic_boston_lm)
new_boston_cubic <- predict(cubic_boston_lm, newdata = new_nox)
crPlots(cubic_boston_lm)
### (4) Splines. ###
splines_boston_lm <- lm(medv ~ bs(nox,knots=c(0.695),degree=1,Boundary.knots=c(0.385, 0.8710)), data = newBoston)
summary(splines_boston_lm)
new_boston_splines <- predict(splines_boston_lm, newdata = new_nox)
# Zobrazíme si tyto transformace:
transf_plot <- ggplot(newBoston, aes(x=nox, y=medv)) +
geom_point(size=1, alpha=0.7) +
geom_line(aes(x=new_nox, y=new_boston_linear, colour="Linear Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_quadratic, colour="Quadratic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_cubic, colour="Cubic Transformation")) +
geom_line(aes(x=new_nox, y=new_boston_splines, colour="Splines Transformation")) +
labs(color="Lines:") +
theme_bw() +
xlab("Nitrogen Oxides Concentration (parts per 10 million)") +
ylab("Mean Value of Owner-Occupied Homes") +
ggtitle("Transformations of the Dependant Variable - Boston Dataset") +
coord_cartesian(xlim=c(0.385, 0.8710), ylim=c(0, 50))
transf_plot
### Podívejme se na rezidua modelů. ###
opar <- par(mfrow=c(2,2))
plot(lin_boston_lm) # Tento model nesplňuje symetrii reziduí (je přítomná nelineární závislost) ani jejich normalitu.
plot(quadratic_boston_lm)
plot(cubic_boston_lm)
plot(splines_boston_lm)
par(opar)
### Vybereme model 'splines_boston_lm', ale provedeme pro něj navíc logaritmickou transformaci odezvy. ###
opar <- par(mfrow=c(2,2))
logsplines_boston_lm <- lm(log(medv) ~ bs(nox,knots=c(0.695),degree=1,Boundary.knots=c(0.385, 0.8710)), data = newBoston)
summary(logsplines_boston_lm)
# Logaritmizací odezvy jsme se docíleli zvětšení koeficientu determinace a zlepšenít tvaru Q-Q plotu.
plot(logsplines_boston_lm)
par(opar)
### Nakreslíme si Scatter Plot s konfidenčními a prediction intervaly na hladine významnosti 5 %: ###
new_conf = predict(logsplines_boston_lm, newdata = new_nox, interval = "confidence", level=0.95)
new_pred = predict(logsplines_boston_lm, newdata = new_nox, interval = "prediction", level=0.95)
boston_crime_final_p1<- ggplot(newBoston, aes(x=nox, y=log(medv))) +
geom_point(size=1, alpha=0.7) +
labs(color="Lines:") +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,1], colour = "Fit")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_conf[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0,90,0.1779), y=new_pred[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Mean Value of Owner-Occupied Homes vs. Criminality") +
coord_cartesian(xlim=c(0, 90), ylim=c(1, 4))
boston_crime_final_p1<- ggplot(newBoston, aes(x=nox, y=log(medv))) +
geom_point(size=1, alpha=0.7) +
labs(color="Lines:") +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_conf[,1], colour = "Fit")) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_conf[,2], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_conf[,3], colour = "Confidence Interval")) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_pred[,2], colour = "Prediction Interval"), linetype=2) +
geom_line(aes(x=seq(0.3850,0.8710,0.0009925), y=new_pred[,3], colour = "Prediction Interval"), linetype=2) +
theme_bw() +
xlab("Per Capita Crime Rate by Town") +
ylab("Log - Mean Value of Owner-Occupied Homes") +
ggtitle("Mean Value of Owner-Occupied Homes vs. Criminality") +
coord_cartesian(xlim=c(0.3850, 0.8710), ylim=c(1.5, 4))
boston_crime_final_p1
### Plot efektů: ###
plot(allEffects(logsplines_boston_lm))
### Shapiro-Wilk Normality Test: ###
shapiro.test(residuals(logsplines_boston_lm))
### Lilliefors (Kolmogorov-Smirnov) test for normality: ###
library(nortest)
lillie.test(residuals(logsplines_boston_lm)) # Analogicky.
### Shapiro-Wilk Normality Test: ###
shapiro.test(residuals(logsplines_boston_lm))
### Lilliefors (Kolmogorov-Smirnov) test for normality: ###
library(nortest)
lillie.test(residuals(logsplines_boston_lm)) # Analogicky.
### Plot efektů: ###
plot(allEffects(logsplines_boston_lm))
### Shapiro-Wilk Normality Test: ###
shapiro.test(residuals(logsplines_boston_lm))
### Lilliefors (Kolmogorov-Smirnov) test for normality: ###
library(nortest)
lillie.test(residuals(logsplines_boston_lm)) # Analogicky.
lillie.test(residuals(logsplines_boston_lm)) # Analogicky, ale na hladině 1 % by to šlo příjmout.
