##################################
##### 01REAN Cviceni 9 ##########
#################################
#
# Todays exercise
# Robust regression - M, MM, LTS
#
setwd("~/Studies/REAN/tutorials/09")
# Load data used in this exercise
library(robustbase)
install.packages("robustbase")
# Load data used in this exercise
library(robustbase)
library(MASS)
library(car)
#Use Hertzsprung-Russell Diagram Data of Star Cluster CYG OB1
? starsCYG
summary(starsCYG)
attach(starsCYG)
#png('starsCYG.png')
plot(log.light ~ log.Te,xlim=rev(range(log.Te)+c(-0.1,0.1)),ylim = c(3.5,6.5), pch=20, col = "red3", xaxs="i",yaxs="i",
main="Hertzsprung-Russell Diagram Data",xlab="SURFICE TEMPERATURE", ylab="LUMINIOUS OUTPUT")
#cst <- covMcd(starsCYG)
OLS_stars <- lm(log.light ~ log.Te)
opar<-par(mfrow = c(2,2))
plot(OLS_stars)
par(opar)
summary(OLS_stars)
plot(log.light ~ log.Te,xlim=rev(range(log.Te)+c(-0.1,0.1)),ylim = c(3.5,6.5), pch=20, col = "red3", xaxs="i",yaxs="i",
main="Hertzsprung-Russell Diagram Data",xlab="SURFICE TEMPERATURE", ylab="LUMINIOUS OUTPUT")
abline(OLS_stars)
points(log.Te[log.Te<3.7],log.light[log.Te<3.7],pch = 22, col = "blue", lwd =2)
c(1:length(log.Te))[log.Te<3.7]
sort(OLS_stars$residuals)
outl <- c(1:length(log.Te))[log.Te<3.7]
OLS_stars2 <- lm(log.light[-outl] ~ log.Te[-outl])
opar<-par(mfrow = c(2,2))
plot(OLS_stars2)
par(opar)
summary(OLS_stars2)
plot(log.light ~ log.Te,xlim=rev(range(log.Te)+c(-0.1,0.1)),ylim = c(3.5,6.5), pch=20, col = "red3", xaxs="i",yaxs="i",
main="Hertzsprung-Russell Diagram Data",xlab="SURFICE TEMPERATURE", ylab="LUMINIOUS OUTPUT")
points(log.Te[log.Te<3.7],log.light[log.Te<3.7],pch = 22, col = "blue", lwd =2)
points(log.Te[7],log.light[7],pch = 22, col = "cyan", lwd =2)
# Summary plot for starsCYG
M_huber_stars    <- rlm(log.light ~ log.Te, method="M", psi = psi.huber)
M_hampel_stars   <- rlm(log.light ~ log.Te, method="M", psi = psi.hampel)
M_bisquare_stars <- rlm(log.light ~ log.Te, method="M", psi = psi.bisquare) # Tukey
MM_bisquare_stars<- rlm(log.light ~ log.Te, method="MM",psi = psi.bisquare) # Tukey
plot(starsCYG,main="Hertzsprung-Russell Diagram Data",xlab="SURFICE TEMPERATURE", ylab="LUMINIOUS OUTPUT")
abline(M_huber_stars, col="blueviolet")
abline(M_hampel_stars, col="blue")
abline(M_bisquare_stars, col="cyan")
abline(MM_bisquare_stars, col="firebrick", lwd = 2)
legend("bottomleft",cex=0.7,legend = c("M Huber","M Hampel","M Tukey","MM Tukey"),
lty = c(1,1,1,1,1),col = c("blueviolet","blue","cyan","firebrick"))
coef(summary(M_huber_stars))
coef(summary(M_hampel_stars))
coef(summary(M_bisquare_stars))
coef(summary(MM_bisquare_stars))
MM_stars2 <- lmrob(log.light ~ log.Te, init = "S")
MM_stars2$coefficients
summary(MM_stars2)
LMS_stars  <- lmsreg(log.light ~ log.Te)
LMS_stars
# two possibilities - ltsreg from MASS (lqs(formula, data, ..., method = c("lts")))
#                   - ltsReg from robustbase
LTS_stars  <- ltsreg(log.light ~ log.Te)
LTS_stars  <- ltsreg(log.light ~ log.Te, alpha=0.9)
LTS_stars  <- ltsreg(log.light ~ log.Te, alpha=0.9)
# Summary plot for starsCYG
OLS_stars  <- lm(log.light ~ log.Te)
MM_stars   <- rlm(log.light ~ log.Te,method="MM")
LTS_stars  <- ltsreg(log.light ~ log.Te)
LTS2_stars <- ltsReg(log.light ~ log.Te, alpha=0.9)
LMS_stars  <- lmsreg(log.light ~ log.Te)
plot(starsCYG,main="Hertzsprung-Russell Diagram Data",xlab="SURFICE TEMPERATURE", ylab="LUMINIOUS OUTPUT")
abline(OLS_stars, col="black")
abline(MM_stars, col="blue")
abline(LTS_stars, col="red")
abline(LTS2_stars, col="darkred")
abline(LMS_stars, col="green")
legend("bottomleft",cex=0.7,legend = c("OLS","MM","LTS, h=0.5","LTS h=0.9","LMS"),
lty = c(1,1,1,1,1),col = c("black","blue","red","darkred","green"))
#Hawkins, Bradu, Kassâ€™s Artificial Data
data(hbk)
? hbk
summary(hbk)
pairs(hbk)
plot(Y ~ X1 + X2 + X3, data = hbk)
? mcdcov
? mcdCov
? hbk
? covMcd
covMcd(hbk, alpha = 0.8)
covMcd(hbk, alpha = 1)
covMcd(hbk, alpha = 2)
covMcd(hbk, alpha = 0.5)
covMcd(hbk, alpha = 0.7)
? hbk
plot(hbk)
covMcd(hbk, alpha = 0.7)
? hbk
M_huber_hbk    <- rlm(Y ~ X1+X2+X3, method="M", psi = psi.huber)
attach(hbk)
M_huber_hbk    <- rlm(Y ~ X1+X2+X3, method="M", psi = psi.huber)
M_hampel_hbk   <- rlm(Y ~ X1+X2+X3, method="M", psi = psi.hampel)
M_bisquare_hbk <- rlm(Y ~ X1+X2+X3, method="M", psi = psi.bisquare) # Tukey
MM_bisquare_hbk<- rlm(Y ~ X1+X2+X3, method="MM",psi = psi.bisquare) # Tukey
plot(starsCYG,main="Hawkins, Bradu, Kass's Artificial Data",xlab="X", ylab="Y")
abline(M_huber_hbk, col="blueviolet")
abline(M_hampel_hbk, col="blue")
abline(M_bisquare_hbk, col="cyan")
abline(MM_bisquare_hbk, col="firebrick", lwd = 2)
legend("bottomleft",cex=0.7,legend = c("M Huber","M Hampel","M Tukey","MM Tukey"),
lty = c(1,1,1,1,1),col = c("blueviolet","blue","cyan","firebrick"))
M_huber_hbk    <- rlm(Y ~ X1+X2+X3, method="M", psi = psi.huber)
M_hampel_hbk   <- rlm(Y ~ X1+X2+X3, method="M", psi = psi.hampel)
M_bisquare_hbk <- rlm(Y ~ X1+X2+X3, method="M", psi = psi.bisquare) # Tukey
MM_bisquare_hbk<- rlm(Y ~ X1+X2+X3, method="MM",psi = psi.bisquare) # Tukey
plot(hbk,main="Hawkins, Bradu, Kass's Artificial Data",xlab="X", ylab="Y")
plot(hbk,main="Hawkins, Bradu, Kass's Artificial Data",xlab=c("X1","X2","X3"), ylab="Y")
plot(hbk,main="Hawkins, Bradu, Kass's Artificial Data", ylab="Y")
plot(hbk,main="Hawkins, Bradu, Kass's Artificial Data", ylab="Y")
plot(hbk,main="Hawkins, Bradu, Kass's Artificial Data")
abline(M_huber_hbk, col="blueviolet")
abline(M_hampel_hbk, col="blue")
M_huber_hbk    <- rlm(Y ~ X1, method="M", psi = psi.huber)
M_hampel_hbk   <- rlm(Y ~ X1, method="M", psi = psi.hampel)
M_bisquare_hbk <- rlm(Y ~ X1, method="M", psi = psi.bisquare) # Tukey
MM_bisquare_hbk<- rlm(Y ~ X1, method="MM",psi = psi.bisquare) # Tukey
plot(hbk,main="Hawkins, Bradu, Kass's Artificial Data")
plot(Y~X1,main="Hawkins, Bradu, Kass's Artificial Data")
abline(M_huber_hbk, col="blueviolet")
abline(M_hampel_hbk, col="blue")
abline(M_bisquare_hbk, col="cyan")
abline(MM_bisquare_hbk, col="firebrick", lwd = 2)
legend("bottomleft",cex=0.7,legend = c("M Huber","M Hampel","M Tukey","MM Tukey"),
lty = c(1,1,1,1,1),col = c("blueviolet","blue","cyan","firebrick"))
?wood
summary(wood)
plot(wood)
