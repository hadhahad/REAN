setwd("~/Studies/REAN/tutorials/05")
setwd("~/Studies/REAN/tutorials/06")
Advert <- read.table("Advertising.csv", sep =",", header = T )
Advert <- read.table("Advert.csv", sep =",", header = T )
setwd("~/Studies/REAN/tutorials/06")
library(lattice)
library(MASS)
library(car)
library(ggplot2)
library(leaps)
library(ISLR)
install.packages("ISLR")
library(ISLR)
summary(Advert)
summary(Advert)
model1 <-  lm(sales ~ TV*radio*newspaper, data = Advert)
summary(Wage)
##################################
##### 01REAN Cviceni 6 ##########
#################################
#
# Todays exercise
# Model Selection
# Post-Hoc Analysis
# Residual Analysis and Diagnostic Tools
# Cookâ€™s Distance
library(lattice)
library(MASS)
library(car)
library(ggplot2)
library(leaps)
library(ISLR)
library(car)
Advert <- read.table("Advert.csv", sep =",", header = T )
head(Advert)
summary(Advert)
summary(model1)
model1 <- lm(sales ~ TV*radio*newspaper, data=Advert)
summary(model1)
pairs(Advert)
model2 <- lm(sales ~ TV*radio, data = Advert)
summary(model2)
model2 <- lm(sales ~ TV*radio, data = Advert)
model_step1 <- step(model1)
summary(model_step1)
model_step2 <- stepACI(model1)
model_step2 <- stepAIC(model1)
model_step2 <- stepAIC9model1, direction = "both")
model_step2 <- stepAIC(model1, direction = "both")
model_step2$anova
anova(model_step1,model2)
model_step3 <- leaps(model1)
leaps(x=Advert[,2:4], y=Advert[,5], names=names(Advert)[2:4], method="Cp")
leaps<-regsubsets(sales~TV*radio*newspaper,data=Advert,nbest=10)
summary(leaps)
plot(leaps,scale="Cp")
# plot statistic by subset size
library(car)
subsets(leaps, statistic="cp")
model1 <- lm(sales ~ TV*radio*newspaper, data=Advert)
leaps(x=Advert[,2:4], y=Advert[,5], names=names(Advert)[2:4], method="Cp")
leaps(x=Advert[,2:4], y=Advert[,5], names=names(Advert)[2:4], method="Cp")
leaps(x=Advert[,2:4], y=Advert[,5], names=names(Advert)[2:4], method="Cp")$Cp
CpValues = leaps(x=Advert[,2:4], y=Advert[,5], names=names(Advert)[2:4], method="Cp")$Cp
CpValues <- leaps(x=Advert[,2:4], y=Advert[,5], names=names(Advert)[2:4], method="Cp")$Cp
leapsstat <- leaps(x=Advert[,2:4], y=Advert[,5], names=names(Advert)[2:4], method="Cp")
CpValues <- leapsstat$Cp
leepsstat$which
leepsstat$size
CpValues <- leapsstat$Cp
leepsstat$size
leapsstat$Cp
leepsstat$size
leapsstat$size
leapsstat$which
leapsstat$size
CpParams <- leapsstat$size
plot(CpValues ~ CpValues)
plot(CpValues ~ CpParams)
subsets(leaps, statistic="cp")
? leaps
leapsstatCp <- leaps(x=Advert[,2:4], y=Advert[,5], names=names(Advert)[2:4], method="Cp")
CpParams <- leapsstatCp$size
CpValues <- leapsstatCp$Cp
plot(CpValues ~ CpParams)
leapsstatr2 <- leaps(x=Advert[,2:4], y=Advert[,5], names=names(Advert)[2:4], method="r2")
r2Params <- leapsstatr2$size
r2Values <- leapsstatr2$Cp
plot(r2Values ~ r2Params)
leapsstatr2 <- leaps(x=Advert[,2:4], y=Advert[,5], names=names(Advert)[2:4], method="r2")
leapsstatr2$size
leapsstatr2$r2
r2Values <- leapsstatr2$r2
plot(r2Values ~ r2Params)
leapsstatadjr2 <- leaps(x=Advert[,2:4], y=Advert[,5], names=names(Advert)[2:4], method="adjr2")
adjr2Params <- leapsstatadjr2$size
adjr2Values <- leapsstatadjr2$r2
plot(adjr2Values ~ adjr2Params)
adjr2Values <- leapsstatadjr2$adjr2
plot(adjr2Values ~ adjr2Params)
plot(r2Values ~ r2Params)
plot(adjr2Values ~ adjr2Params)
r2Values
adjr2Values
?steps
?step
model1 <- lm(sales ~ TV*radio*newspaper, data=Advert)
model_step2 <- stepAIC(model1)
model_step2 <- stepAIC(model1, direction = "both")
model_step2 <- stepAIC(model1)
model_step2$anova
model_step2 <- stepAIC(model1, direction = "both")
summary(model_step2)
model <- lm(sales ~ TV*radio)
model <- lm(sales ~ TV*radio, data=Advert)
summary(model)
model <- lm(sales ~ TV+radio, data=Advert)
summary(model)
model <- lm(sales ~ TV*radio, data=Advert)
summary(model)
model <- lm(sales ~ TV, data=Advert)
summary(model)
plot(sales~TV)
plot(sales~TV, data=Advert)
plot(sales~TV, data=Advert, xlabel="lal")
?plot
?plot
plot(sales~TV, data=Advert, xlab="Sales", ylab="TV", main="Dependance of Sales on TV advertising")
?lm
predict.lm(model,interval = "none")
line(predict.lm(model,interval = "none"))
fit <- predict.lm(model,interval = "none")
fit
summary(fit)
sales_new <- data.frame(TV = (seq(0,300,1)))
conf_new  <- predict(model, newdata = sales_new, interval = "confidence")
pred_new  <- predict(model, newdata = sales_new, interval = "prediction")
conf_new
pred_new
sales_new <- data.frame(TV = seq(0,300,1))
conf_new  <- predict(model, newdata = sales_new, interval = "confidence")
pred_new  <- predict(model, newdata = sales_new, interval = "prediction")
lines(seq(0,300,1), pred_new[,1], col='black')
lines(seq(0,300,1), pred_new[,2], col='red')
lines(seq(0,300,1), pred_new[,3], col='red')
lines(seq(0,300,1), conf_new[,2], col='blue')
lines(seq(0,300,1), conf_new[,3], col='blue')
plot(sales~TV, data=Advert, xlab="TV", ylab="Sales", main="Dependance of Sales on TV advertising")
sales_new <- data.frame(TV = seq(0,300,1))
conf_new  <- predict(model, newdata = sales_new, interval = "confidence")
pred_new  <- predict(model, newdata = sales_new, interval = "prediction")
lines(seq(0,300,1), pred_new[,1], col='black')
lines(seq(0,300,1), pred_new[,2], col='red')
lines(seq(0,300,1), pred_new[,3], col='red')
lines(seq(0,300,1), conf_new[,2], col='blue')
lines(seq(0,300,1), conf_new[,3], col='blue')
plot(sales~TV*radio, data=Advert, xlab="TV", ylab="Sales", main="Dependance of Sales on TV&Radio advertising")
plot(sales~TV*radio, data=Advert, xlab="TV", ylab="Sales", main="Dependance of Sales on TV&Radio advertising")
plot(sales~TV*radio, data=Advert, xlab="TV", ylab="Sales", main="Dependance of Sales on TV&Radio advertising")
sales_new <- data.frame(TV = seq(0,300,1))
conf_new  <- predict(model, newdata = sales_new, interval = "confidence")
pred_new  <- predict(model, newdata = sales_new, interval = "prediction")
lines(seq(0,300,1), pred_new[,1], col='black')
lines(seq(0,300,1), pred_new[,2], col='red')
lines(seq(0,300,1), pred_new[,3], col='red')
lines(seq(0,300,1), conf_new[,2], col='blue')
lines(seq(0,300,1), conf_new[,3], col='blue')
# Advertising data displays sales (in thousands of units) for a particular product
# Advertising data displays sales (in thousands of units) for a particular product
# as a function of advertising budgets (in thousands of dollars) for TV, radio, and newspaper media.
plot(sales~TV*radio, data=Advert, xlab="TV", ylab="Sales", main="Dependance of Sales on TV&Radio advertising")
sales_new <- data.frame(TV = seq(0,300,1))
conf_new  <- predict(model, newdata = sales_new, interval = "confidence")
pred_new  <- predict(model, newdata = sales_new, interval = "prediction")
lines(seq(0,300,1), pred_new[,1], col='black')
lines(seq(0,300,1), pred_new[,2], col='red')
lines(seq(0,300,1), pred_new[,3], col='red')
lines(seq(0,300,1), conf_new[,2], col='blue')
plot(sales~TV*radio, data=Advert, xlab="TV", ylab="Sales", main="Dependance of Sales on TV&Radio advertising")
summary(Advert)
